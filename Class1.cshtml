@using Humanizer;
@functions{ public string dasherize(string dashed)
            {
                return dashed.Underscore().Dasherize();
            }
            public string classify(string classified)
            {
                return classified.Pascalize();
            } }
import { Component, OnInit @if(Model.viewEncapsulation!=null) {<text>, ViewEncapsulation</text>}@if (Model.changeDetection != "Default")
{<text>, ChangeDetectionStrategy</text>} } from '@@angular/core';

@@Component({
@if (!Model.skipSelector)
{<text>
        selector: '@Model.selector',</text>}
@if (Model.inlineTemplate)
{<text>
        template: `
        < p >
        @dasherize(Model.name) works!
        </ p >
        `,</text>}
else
{<text>
    templateUrl: './@(dasherize(Model.name)).component.html',</text>}
@if (Model.inlineStyle)
{<text>
        styles:[]</text>}
else
{<text>
    styleUrls:['./@(dasherize(Model.name)).component.@Model.style']</text>}
@if (Model.viewEncapsulation != null)
{<text>,
        encapsulation: ViewEncapsulation.@Model.viewEncapsulation</text>}
@if (Model.changeDetection != "Default")
{<text>,
        changeDetection: ChangeDetectionStrategy.@Model.changeDetection</text>}
})
export class @classify(Model.name)Component implements OnInit {

  constructor() { }

  ngOnInit() {
  }

}

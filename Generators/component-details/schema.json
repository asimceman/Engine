{
  "$schema": "http://json-schema.org/schema",
  "id": "SchematicsAngularComponentTable",
  "title": "Angular Dialog Options Schema",
  "type": "object",
  "description": "Creates a new generic component definition in the given or default project.",
  "properties": {
    "path": {
      "type": "string",
      "format": "path",
      "description": "The path at which to create the component file, relative to the current workspace. Default is a folder with the same name as the component in the project root.",
      "visible": false
    },
    "project": {
      "type": "string",
      "description": "The name of the project.",
      "$default": {
        "$source": "projectName"
      }
    },
    "name": {
      "type": "string",
      "description": "The name of the component.",
      "$default": {
        "$source": "argv",
        "index": 0
      },
      "x-prompt": "What name would you like to use for the component?"
    },
    "service": {
      "type": "string",
      "x-prompt": "What is the service name (eg. User)?"
    },
    "model": {
      "type": "string",
      "x-prompt": "What is the model name eg. User (used mainly for localization)"
    },
    "isDialog": {
      "type": "boolean",
      "x-prompt": "This component is dialog?",
      "default": false
    },
    "isTabbed": {
      "type": "boolean",
      "x-prompt": "This component should be rendered as tabs?",
      "default": false
    },
    "parentId": {
      "type": "string",
      "x-prompt": "If this component can't be without parent, type its prop name here or leave empty (eg. customerId)"
    },
    "isIdFromRoute": {
      "type": "boolean",
      "x-prompt": "Id for entity is retreived from route?",
      "default": true
    },
    "inlineStyle": {
      "description": "When true, includes styles inline in the component.ts file. Only CSS styles can be included inline. By default, an external styles file is created and referenced in the component.ts file.",
      "type": "boolean",
      "default": false,
      "alias": "s",
      "x-user-analytics": 9
    },
    "inlineTemplate": {
      "description": "When true, includes template inline in the component.ts file. By default, an external template file is created and referenced in the component.ts file.",
      "type": "boolean",
      "default": false,
      "alias": "t",
      "x-user-analytics": 10
    },
    "viewEncapsulation": {
      "description": "The view encapsulation strategy to use in the new component.",
      "enum": [ "Emulated", "Native", "None", "ShadowDom" ],
      "type": "boolean",
      "alias": "v",
      "default": true,
      "x-user-analytics": 11
    },
    "changeDetection": {
      "description": "The change detection strategy to use in the new component.",
      "enum": [ "Default", "OnPush" ],
      "type": "string",
      "default": "Default",
      "alias": "c"
    },
    "prefix": {
      "type": "string",
      "description": "The prefix to apply to the generated component selector.",
      "alias": "p",
      "oneOf": [
        {
          "maxLength": 0
        },
        {
          "minLength": 1,
          "format": "html-selector"
        }
      ]
    },
    "styleext": {
      "description": "The file extension to use for style files.",
      "type": "string",
      "default": "css",
      "x-deprecated": "Use \"style\" instead."
    },
    "style": {
      "description": "The file extension or preprocessor to use for style files.",
      "type": "string",
      "default": "scss",
      "enum": [
        "css",
        "scss",
        "sass",
        "less",
        "styl"
      ],
      "x-user-analytics": 5
    },
    "spec": {
      "type": "boolean",
      "description": "When true (the default), generates a  \"spec.ts\" test file for the new component.",
      "default": false,
      "x-deprecated": "Use \"skipTests\" instead."
    },
    "skipTests": {
      "type": "boolean",
      "description": "When true, does not create \"spec.ts\" test files for the new component.",
      "default": true,
      "x-user-analytics": 12
    },
    "flat": {
      "type": "boolean",
      "description": "When true, creates the new files at the top level of the current project.",
      "default": false
    },
    "skipImport": {
      "type": "boolean",
      "description": "When true, does not import this component into the owning NgModule.",
      "default": false,
      "x-user-analytics": 18
    },
    "selector": {
      "type": "string",
      "format": "html-selector",
      "description": "The HTML selector to use for this component."
    },
    "skipSelector": {
      "type": "boolean",
      "default": false,
      "description": "Specifies if the component should have a selector or not."
    },
    "module": {
      "type": "string",
      "description": "The declaring NgModule.",
      "alias": "m"
    },
    "export": {
      "type": "boolean",
      "default": false,
      "description": "When true, the declaring NgModule exports this component.",
      "x-user-analytics": 19
    },
    "entryComponent": {
      "type": "boolean",
      "default": true,
      "description": "When true, the new component is the entry component of the declaring NgModule."
    },
    "lintFix": {
      "type": "boolean",
      "default": false,
      "description": "When true, applies lint fixes after generating the component.",
      "x-user-analytics": 15
    },
    "columns": {
      "type": "questionArray",
      "x-prompt": "Which columns does this component need (press enter on empty line to finish)",
      "enum": [
        {
          "question": "Which type?",
          "name": "type",
          "type": "string",
          "options": [ "input", "datepicker", "autocomplete", "select", "checkbox", "textarea", "repeat" ]
        },
        {
          "question": "Size?",
          "name": "size",
          "type": "int",
          "options": [ 3, 4, 6, 8, 10, 12 ]
        }

      ]
    },
    "additionalServices": {
      "type": "questionArray",
      "x-prompt": "Which additional services does this component need (press enter on empty line to finish)",
      
    }
  },
  "required": [
    "name", "service", "model"
  ]
}
